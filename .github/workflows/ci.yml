name: Java CI

on:
  push:
    branches:
      - feat/gh-action
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  ECR_REPOSITORY: petclinic

jobs:
  lint_and_check:
    name: Linters Analysis
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read
      # To report GitHub Actions status checks
      statuses: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Lint Code Base
        uses: super-linter/super-linter@v6.7.0
        env:
          VALIDATE_JAVA: true
          VALIDATE_GOOGLE_JAVA_FORMAT: true
          # To report GitHub Actions status checks
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  test:
    name: Test - Units & Integrations
    runs-on: ubuntu-latest
    # needs: [lint_and_check]

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: "temurin"
          cache: maven

      - name: Maven Package
        run: ./mvnw -B clean package --file pom.xml -DskipTests

      - name: Maven Verify
        run: ./mvnw -B clean verify

  build:
    runs-on: ubuntu-latest
    needs: [test]
    permissions:
      contents: read
      id-token: write
    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.CORE_GH_ROLE }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        with:
          images: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
          tags: |
            type=sha,prefix=sha-

      - name: Build and push docker image to Amazon ECR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          file: Dockerfile
          platforms: linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Image Tag output
        id: image-tag
        run: |
          IMAGE_TAG=$(echo ${{ steps.meta.outputs.tags }} | awk -F':' '{print $NF}')
          echo "::notice title=Image tag::${IMAGE_TAG}"
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
